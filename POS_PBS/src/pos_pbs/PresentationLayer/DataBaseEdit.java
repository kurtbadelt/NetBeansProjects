/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MultivaluedEdit.java
 *
 * Created on Nov 27, 2011, 1:01:25 PM
 */
package pos_pbs.PresentationLayer;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import pos_pbs.DataBaseLayer.LocalDBDriver;
import pos_pbs.Util.Util;

/**
 *
 * @author kurtbadelt
 */
public class DataBaseEdit extends javax.swing.JPanel {

    Util util = new Util();
    LocalDBDriver ldb = new LocalDBDriver();
    String selectedTable = "";

    /** Creates new form MultivaluedEdit */
    public DataBaseEdit() {
        initComponents();
        this.fillComboTables();

    }

    public void fillComboTables() {
        this.jComboBoxChooseTable.removeAllItems();
        this.util.fillTablesCombo(this.jComboBoxChooseTable);




    }

    public String makeDialog(String Message, boolean warning, String currentValue) {

        if (!warning) {

            String value = JOptionPane.showInputDialog(this, Message, currentValue);


            return value;
        } else {
            JOptionPane.showMessageDialog(this, Message, "Invalid Action", JOptionPane.ERROR_MESSAGE);

            return "";
        }




    }

    public void tableAction() {


        final int selectedRow = jTableData.getSelectedRow();
        final int selectedCol = jTableData.getSelectedColumn();



        if ((selectedRow >= 0) && (selectedCol >= 0)) {
            String field = jTableData.getColumnName(selectedCol);
            String table = selectedTable;
            String id = jTableData.getValueAt(selectedRow, 0).toString();
            String currentData = jTableData.getValueAt(selectedRow, selectedCol).toString();
            String key = jTableData.getColumnName(0);
            boolean isInt = false;
            String newValue = "";



            try {
                int test = Integer.parseInt(currentData);
                isInt = true;
            } catch (Exception ex) {
                isInt = false;
            }



            if (selectedCol > 0) {
                if (field.equals("password")) {

                    JOptionPane.showMessageDialog(this, "You can't change password", "Invalid Action", JOptionPane.ERROR_MESSAGE);
                } else {

                    String Message = "Enter the data to replace " + currentData + " in table: " + table + " with ID:" + id;

                    newValue = makeDialog(Message, false, currentData);
                    if (newValue != null) {

                        LocalDBDriver ldb = new LocalDBDriver();
                        ldb.createConnection();
                        if (isInt) {
                            ldb.updateInt(table, field, Integer.parseInt(newValue), key, id);
                            updateTable();
                        } else if (!isInt) {

                            ldb.updateString(table, field, newValue, key, id);
                            updateTable();

                        }
                    }
                }
            } else if (selectedCol == 0) {
                String Message = "You can't modify an ID";

                newValue = makeDialog(Message, true, "");

            }



        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jLabelTitle = new javax.swing.JLabel();
        jLabelChooseCombo = new javax.swing.JLabel();
        jComboBoxChooseTable = new javax.swing.JComboBox();
        jButtonOK = new javax.swing.JButton();
        jScrollPaneTable = new javax.swing.JScrollPane();
        jTableData = new javax.swing.JTable();
        jButtonExport = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(800, 600));

        jLabelTitle.setBackground(new java.awt.Color(102, 204, 255));
        jLabelTitle.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/config_48px.png"))); // NOI18N
        jLabelTitle.setText(" Database Edit");
        jLabelTitle.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jLabelTitle.setOpaque(true);

        jLabelChooseCombo.setText("Choose a Table to Edit");

        jComboBoxChooseTable.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxChooseTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBoxChooseTableMouseClicked(evt);
            }
        });
        jComboBoxChooseTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxChooseTableActionPerformed(evt);
            }
        });

        jButtonOK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/OK.png"))); // NOI18N
        jButtonOK.setText("OK");
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });

        jScrollPaneTable.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPaneTable.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jTableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableData.setCellSelectionEnabled(true);
        jTableData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableDataMouseClicked(evt);
            }
        });
        jScrollPaneTable.setViewportView(jTableData);

        jButtonExport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/page_excel.png"))); // NOI18N
        jButtonExport.setText("Export");
        jButtonExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExportActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLabelTitle, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 954, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .add(layout.createSequentialGroup()
                .add(39, 39, 39)
                .add(jLabelChooseCombo)
                .add(18, 18, 18)
                .add(jComboBoxChooseTable, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 257, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(4, 4, 4)
                .add(jButtonOK))
            .add(layout.createSequentialGroup()
                .add(9, 9, 9)
                .add(jScrollPaneTable, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 954, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(layout.createSequentialGroup()
                .add(433, 433, 433)
                .add(jButtonExport, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(20, 20, 20)
                .add(jLabelTitle)
                .add(32, 32, 32)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(5, 5, 5)
                        .add(jLabelChooseCombo))
                    .add(layout.createSequentialGroup()
                        .add(1, 1, 1)
                        .add(jComboBoxChooseTable, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jButtonOK))
                .add(18, 18, 18)
                .add(jScrollPaneTable, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 500, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(7, 7, 7)
                .add(jButtonExport))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
        updateTable();
    }//GEN-LAST:event_jButtonOKActionPerformed

    public void updateTable() {
        if (jComboBoxChooseTable != null) {
            selectedTable = jComboBoxChooseTable.getSelectedItem().toString();

            ldb.createConnection();
            String headers = ldb.DescribeTable(selectedTable);


            String[] data = ldb.selectAllFromTable(selectedTable);



            try {
                util.fillTable(jTableData, data, headers, ";");
                jTableData.setVisible(true);
            } catch (Exception ex) {
                util.writeErrorToLog(ex, "DabaseEdit_UpdateTable");

            }
        }

    }

    private void jButtonExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExportActionPerformed
        JFileChooser jfilechooser = new JFileChooser();


        final int respuesta = jfilechooser.showSaveDialog(DataBaseEdit.this);

        if (!(respuesta == JFileChooser.CANCEL_OPTION)) {

            String FileName = jfilechooser.getSelectedFile().getPath();

            util.exportTable(jTableData, FileName);

        }



    }//GEN-LAST:event_jButtonExportActionPerformed

    private void jTableDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableDataMouseClicked

        tableAction();
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableDataMouseClicked

    private void jComboBoxChooseTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxChooseTableActionPerformed
    }//GEN-LAST:event_jComboBoxChooseTableActionPerformed

    private void jComboBoxChooseTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxChooseTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxChooseTableMouseClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonExport;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JComboBox jComboBoxChooseTable;
    private javax.swing.JLabel jLabelChooseCombo;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPaneTable;
    private javax.swing.JTable jTableData;
    // End of variables declaration//GEN-END:variables
}
